plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    
}

java {
	sourceCompatibility = JavaVersion.toVersion(11)
	targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
}

test {
    // Use JUnit Platform for unit tests.
    ignoreFailures = true 
    useJUnitPlatform()
}

task reports(dependsOn:['javadoc','test']) {
//make sure javadoc and test run 
 	
 	copy{
 		
 		from "build/docs/"
 		into "build/reports/javadoc/"
	
 		} 
 		
 		copy{
 		
 		from "src/main/html/"
		into "build/reports"
		
		}
 
}

def websiteRepo='https://github.com/Cwoody240/website-repository.git'  
task deployReports(dependsOn:['reports']){

	doLast {
	delete 'build/gh-pages'
        exec {
        
            workingDir = '.'
            commandLine = ['git', 'clone', websiteRepo, 'build/gh-pages']
        }
    }
	
	copy{
	
 		from "build/reports"
		into "build/gh-pages"
		}
		
        exec {
            workingDir = 'build/gh-pages'                                
            commandLine = ['git', 'add', '-f', '.']
        }
        exec {
            workingDir = 'build/gh-pages'
            commandLine = ['git', 'commit', '-m', 'Updating-webpages']   
        }
        exec {
            workingDir = 'build/gh-pages'
            commandLine = ['git', 'push']
        }
        
 

}
